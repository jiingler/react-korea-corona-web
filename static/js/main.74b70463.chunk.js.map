{"version":3,"sources":["components/layout/Footer.js","components/layout/Navbar.js","components/common/RegionTitle.js","components/common/item_small/ItemAmount_sm.js","components/common/item_small/ItemTitle_sm.js","components/common/item_small/Item_sm.js","components/common/item_large/ItemAmount_lg.js","components/common/item_large/ItemTitle_lg.js","components/common/item_large/Item_lg.js","components/EntireCountry.js","components/common/RegionCard.js","components/RegionList.js","api/ApiUtils.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","handleSwitchArea","className","onClick","Navbar","RegionTitle","regionName","refreshDateTime","ItemAmountSm","amount","ItemTitleSm","title","ItemSm","ItemAmountLg","ItemTitleLg","ItemLg","EntireCountry","entireCountryData","updateTime","todayCase","totalCase","nowCase","totalRecovered","todayRecovered","totalDeath","todayDeath","RegionCard","regionData","countryName","death","newCase","newCcase","newFcase","percentage","recovered","RegionList","regionPayload","map","fetchJson","requestUrl","fetch","headers","then","response","json","API_KEY","ENTIRE_COUNTRY_REQUEST_URL","REGION_REQUEST_URL","App","useState","setEntireCountryData","setRegionData","currentPage","setCurrentPage","useEffect","a","Promise","all","data","TotalCase","NowCase","TotalRecovered","TodayRecovered","TotalDeath","TodayDeath","console","log","Object","values","filter","item","includes","fetchedEntireCountryData","fetchedRegionData","fetchData","val","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74b70463.chunk.js","sourcesContent":["const Footer = ({handleSwitchArea}) => (\n  <div className=\"footer\">\n    <button className=\"btn\" onClick={() => handleSwitchArea('전국')}>전국</button>\n    <button className=\"btn\" onClick={() => handleSwitchArea('도시별')}>도시별</button>\n  </div>\n)\n\nexport default Footer;","const Navbar = () => (\n  <div className=\"navbar\">\n    실시간 코로나 데이터 \n  </div>\n);\n\nexport default Navbar;","const RegionTitle = ({regionName, refreshDateTime}) => (\n  <div className=\"region-title p-3 mb-2\">\n    <h2 className=\"position-title\">{regionName} 현황</h2>\n    <p className=\"refresh-datetime\">{refreshDateTime}</p>\n  </div>\n);\n\nexport default RegionTitle;","const ItemAmountSm = ({ amount }) => (\n  <p className=\"amount-sm\">{amount}</p>\n);\n\nexport default ItemAmountSm;","const ItemTitleSm = ({ title }) => (\n  <h5 className=\"title-sm\">{title}</h5>\n);\n\nexport default ItemTitleSm;","import ItemAmountSm from './ItemAmount_sm';\nimport ItemTitleSm from './ItemTitle_sm';\n\nconst ItemSm = ({ title, amount }) => (\n  <div className=\"p-3 bg-light\">\n    <ItemTitleSm title={title} />\n    <ItemAmountSm amount={amount} />\n  </div>\n);\n\nexport default ItemSm;","const ItemAmountLg = ({ amount }) => (\n  <p className=\"amount-lg\">{amount}</p>\n);\n\nexport default ItemAmountLg;","const ItemTitleLg = ({ title }) => (\n  <h3 className=\"title-lg\">{title}</h3>\n);\n\nexport default ItemTitleLg;","import ItemAmountLg from './ItemAmount_lg';\nimport ItemTitleLg from './ItemTitle_lg';\n\nconst ItemLg = ({ title, amount }) => (\n  <>\n    <ItemTitleLg title={title} />\n    <ItemAmountLg amount={amount} />\n  </>\n);\n\nexport default ItemLg;","import RegionTitle from './common/RegionTitle';\nimport Unit from './common/Unit';\nimport ItemSm from './common/item_small/Item_sm';\nimport ItemLg from './common/item_large/Item_lg';\n\nconst EntireCountry = ({entireCountryData}) => {\n\n  const {\n    updateTime,\n    todayCase,\n    totalCase,\n    nowCase,\n    totalRecovered,\n    todayRecovered,\n    totalDeath,\n    todayDeath,\n  } = entireCountryData;\n  \n  return (\n    <div className=\"content text-center px-0\">\n      <RegionTitle regionName={'전국'} refreshDateTime={updateTime} />\n      {/* <Unit /> */}\n      <div className=\"row gx-0\">\n        <div className=\"col-12 p-3 mb-3 bg-light\">\n          <ItemLg title={'신규확진자'} amount={todayCase} />\n        </div>\n        <div className=\"col-6 p-3 mb-3 bg-light\">\n          <ItemSm title={'확진자'} amount={totalCase} />\n        </div>\n        <div className=\"col-6 p-3 mb-3 bg-light\">\n          <ItemSm title={'격리진행중'} amount={nowCase} />\n        </div>\n        <div className=\"col-6 p-3 bg-light\">\n          <div className=\"mb-3\">\n            <ItemSm title={'총 완치자수'} amount={totalRecovered} />\n          </div>\n          <div>\n            <ItemSm title={'오늘 완치자수'} amount={todayRecovered} />\n          </div>\n        </div>\n        <div className=\"col-6 p-3 bg-light\">\n          <div className=\"mb-3\">\n            <ItemSm title={'총 사망자수'} amount={totalDeath} />\n          </div>\n          <div>\n            <ItemSm title={'오늘 사망자수'} amount={todayDeath} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EntireCountry;","import ItemAmountSm from \"./item_small/ItemAmount_sm\";\n\nconst RegionCard = ({regionData}) => {\n  const {\n    countryName,\n    death,\n    newCase,\n    newCcase,\n    newFcase,\n    percentage,\n    recovered,\n    totalCase,\n  } = regionData;\n  return (\n    <div className=\"col-lg-2 col-md-3 col-4\">\n      <button className=\"btn w-100 py-4 bg-light text-center\">\n        <h3 className=\"region-name\">{countryName}</h3>\n      </button>\n    </div>\n  );\n}\n\nexport default RegionCard;","import RegionCard from \"./common/RegionCard\";\n\nconst RegionList = ({regionPayload}) => {\n  return (\n    <div className=\"content row g-3\">\n    {regionPayload.map(regionData => {\n      return (\n        <RegionCard regionData={regionData} key={regionData.countryName}/>\n      )\n    })}\n    </div>\n  );\n}\n\nexport default RegionList;","const cors = 'https://cors-anywhere.herokuapp.com/'\n\nexport const fetchJson = (requestUrl) => {\n  return fetch(requestUrl, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin' : 'https://jiingler.github.io',\n    },\n  })\n  .then(response => response.json())\n}","import './App.scss';\n\nimport Footer from './components/layout/Footer';\nimport Navbar from './components/layout/Navbar';\nimport EntireCountry from './components/EntireCountry';\nimport RegionList from './components/RegionList';\nimport RegionDetail from './components/RegionDetail';\n\nimport {fetchJson} from './api/ApiUtils';\n\nimport {useState, useEffect} from 'react';\n\n\nconst API_KEY = '7e7c57e81fdf04a63f2a64645c11e1780';\nconst ENTIRE_COUNTRY_REQUEST_URL = `https://api.corona-19.kr/korea/?serviceKey=${API_KEY}`;\nconst REGION_REQUEST_URL = `https://api.corona-19.kr/korea/country/new/?serviceKey=${API_KEY}`;\n\nconst fetchEntireCountryData = () => {\n  return fetchJson(ENTIRE_COUNTRY_REQUEST_URL).then(data => {\n    return {\n      updateTime: data.updateTime,\n      todayCase: 0,\n      totalCase: data.TotalCase,\n      nowCase: data.NowCase,\n      totalRecovered: data.TotalRecovered,\n      todayRecovered: data.TodayRecovered,\n      totalDeath: data.TotalDeath,\n      todayDeath: data.TodayDeath,\n    }\n  });\n}\n\nconst fetchRegionData = () => {\n  return fetchJson(REGION_REQUEST_URL).then(data => {\n    console.log(data)\n\n    return Object.values(data)\n      .filter(item => item.countryName && !['검역'].includes(item.countryName));\n    \n  })\n}\n\nfunction App() {\n\n  const [entireCountryData, setEntireCountryData] = useState({\n    updateTime: '1970/01/01 00:00:00',\n    todayCase: 0,\n    totalCase: 0,\n    nowCase: 0,\n    totalRecovered: 0,\n    todayRecovered: 0,\n    totalDeath: 0,\n    todayDeath: 0,\n  });\n\n  const [regionData, setRegionData] = useState([]);\n\n  const [currentPage, setCurrentPage] = useState('전국')\n\n  const handleSwitchArea = (val) => {\n    setCurrentPage(val);\n  }\n\n  useEffect(()=>{\n    const fetchData = async () => {\n      let [fetchedEntireCountryData, fetchedRegionData] = await Promise.all([\n        fetchEntireCountryData(),\n        fetchRegionData()\n      ]);\n\n      fetchedEntireCountryData.todayCase = fetchedRegionData.filter(item => item.countryName === '합계')[0].newCase;\n\n      fetchedRegionData = [...fetchedRegionData.filter(item => item.countryName !== '합계')];\n\n      setEntireCountryData({\n        ...fetchedEntireCountryData,\n      });\n\n      setRegionData([\n        ...fetchedRegionData,\n      ])\n    }\n    \n    fetchData();\n  }, []);\n\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        {currentPage === '전국' && <EntireCountry entireCountryData={entireCountryData} />}\n        {currentPage === '도시별' && <RegionList regionPayload={regionData}/>}\n        {/* <RegionDetail />*/}\n      </div>\n      <Footer handleSwitchArea={handleSwitchArea}/>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}